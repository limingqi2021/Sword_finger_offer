class Solution {
public:

    int maxValue(vector<vector<int>>& grid) {
        int row=grid.size(),col=grid[0].size();
        if(row==0||col==0)
            return 0;
        // vector<vector<int>> dp(row,vector<int> (col,0));
        // for(int i=0;i<row;i++){
        //     for(int j=0;j<col;j++){
        //         if(i==0&&j==0)
        //             dp[i][j]=grid[i][j];
        //         else if(i==0)
        //             dp[i][j]+=dp[i][j-1]+grid[i][j];
        //         else if(j==0)
        //             dp[i][j]+=dp[i-1][j]+grid[i][j];
        //         else
        //             dp[i][j]=max(dp[i][j-1],dp[i-1][j])+grid[i][j];
        //     }
        // }
        // return dp[row-1][col-1];

        // int dp[row+1][col+1]={0};
        //int dp[row+1][col+1];
        //memset(dp,0,(row+1)*(col+1));

        vector<vector<int>> dp(row+1,vector<int> (col+1,0));
        for(int i=1;i<=row;i++){
            for(int j=1;j<=col;j++)
            dp[i][j]=max(dp[i-1][j],dp[i][j-1])+grid[i-1][j-1];
        }
        return dp[row][col];
    }
};

class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        if(nums.size()==0||k==0)
            return {};
        int left=1-k,right=0;
        deque<int> dq;
        vector<int> res;
        while(right<nums.size()){
            if(left>0&&nums[left-1]==dq[0]) 
                dq.pop_front();

            while(!dq.empty()&&dq[dq.size()-1]<nums[right])
                dq.pop_back();
            //if (!dq.empty() && left - dq.front() >= k) 
              //  dq.pop_front();
            dq.push_back(nums[right]);
            if(left>=0)
                res.push_back(dq[0]);
            left++;
            right++;
        }
        return res;
    }
};

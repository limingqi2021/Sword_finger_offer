递归
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        if(l1==NULL)
            return l2;
        else if(l2==NULL)
            return l1;
        ListNode* cur=NULL;
        if(l1->val<l2->val){
            cur=l1;
            cur->next=mergeTwoLists(l1->next,l2);
        }else{
            cur=l2;
            cur->next=mergeTwoLists(l1,l2->next);
        }
        return cur;
    }
};
//迭代
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        ListNode* head=new ListNode(1);
        ListNode* cur=head;
        while(l1!=NULL&&l2!=NULL){
            if(l1->val<l2->val){
                head->next=l1;
                l1=l1->next;
            }else{
                head->next=l2;
                l2=l2->next;
            }
            head=head->next;
        }
        head->next=l1==NULL?l2:l1;
        return cur->next;
    }
};

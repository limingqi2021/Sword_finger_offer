/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* getKthFromEnd(ListNode* head, int k) {
        ListNode* fast=head;
        while(fast!=NULL){
            fast=fast->next;
            if(k==0)
                head=head->next;
            else
                k--;
        }
        return head;
    }
};

class Solution {
public:
    ListNode* getKthFromEnd(ListNode* head, int k) {
        ListNode* fast=head;
        ListNode* low=head;
        for(int i=0;i<k-1;i++)
            fast=fast->next;
        while(fast->next!=NULL){
            fast=fast->next;
            low=low->next;
        }
        return low;
    }
};

class Solution {
public:
    ListNode* getKthFromEnd(ListNode* head, int k) {
        ListNode* fast=head;
        ListNode* low=head;
        if(head==NULL||k==0)
            return NULL;
        for(int i=0;i<k-1;i++){
            if(fast->next!=NULL)
                fast=fast->next;
            else
                return NULL;
        }
        while(fast->next!=NULL){
            fast=fast->next;
            low=low->next;
        }
        return low;
    }
};

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> res;
        if(root==NULL)
            return {};
        queue<TreeNode*> q;
        int count=1;
        q.push(root);
        
         while(!q.empty()){
        vector<int> res1;

        for(int i=q.size();i>0;i--){
            TreeNode* temp=q.front();
            q.pop();
            res1.push_back(temp->val);
             if(temp->left!=NULL)
                q.push(temp->left);
            if(temp->right!=NULL)
                q.push(temp->right);
        }
            if(count%2==0){
                reverse(res1.begin(),res1.end());
            //     stack<int> res2;
            //     for(int i=0;i<res1.size();i++){
            //     int temp1=res1[i];
            //     res2.push(temp1);
            // }
            // int m=res2.size();
            // for(int i=0;i<m;i++){
            //     int temp2=res2.top();
            //     res2.pop();
            //     res1[i]=temp2;

            //     }
            }
            count++;
            res.push_back(res1); 
        }
        return res;
    }
};
